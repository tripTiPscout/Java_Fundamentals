package Fundamentals;

import java.util.*;
import java.util.stream.Collectors;

public class AnonymousThreat {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<String> input = Arrays.stream(scanner.nextLine().split("\\s+")).collect(Collectors.toList());

        String command = scanner.nextLine();

        while (!command.equals("3:1")) {
            String[] commands = command.split("\\s+");
            
            switch (commands[0]) {
                case "merge":
                    int startIndex = Integer.parseInt(commands[1]);
                    int endIndex = Integer.parseInt(commands[2]);
                    
                    if (startIndex < 0) {
                        startIndex = 0;
                    }
                    if (endIndex > input.size() - 1) {
                        endIndex = input.size() - 1;
                    }
                    if (startIndex >= endIndex) {
                        break;
                    }
                    
                    StringBuilder newElement = new StringBuilder();
                    
                    for (int i = startIndex; i <= endIndex; i++) {
                        newElement.append(input.get(i));
                    }
                    
                    input.add(startIndex, newElement.toString());
                    input.subList(startIndex + 1, endIndex + 2).clear();
                    break;
                    
                case "divide":
                    int index = Integer.parseInt(commands[1]);
                    int partitions = Integer.parseInt(commands[2]);
                    
                    String textToDivide = input.get(index);
                    int substrings = textToDivide.length() / partitions;
                    input.remove(index);
                    int startIndexDivide = 0;
                    
                    for (int j = 1; j < partitions; j++) {
                        input.add(index, textToDivide.substring(startIndexDivide, startIndexDivide + substrings));
                        index++;
                        startIndexDivide += substrings;
                    }
                    
                    input.add(index, textToDivide.substring(startIndexDivide));
                    break;
            }
            command = scanner.nextLine();
        }

        System.out.println(input.toString().replaceAll("[\\[\\],]", ""));

    }

}
